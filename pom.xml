<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>
  <groupId>org.bukkit</groupId>
   <name>WildExtras</name>
   <version>1.1.2</version>
     <artifactId>WildExtras</artifactId>
  <packaging>jar</packaging>
  <url>http://the-wild.hopto.org</url>
   
    <repositories>
    <repository>
        <id>bigpresh</id>
        <url>file:///home/davidp/dev/mavenrepo</url>
    </repository>
    <repository>
      <id>spigot-repo</id>
      <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>
    </repository>
<!--
    skip most of these repos, we'll dump our deps in the local repo above.
    This is dirty, but waiting for ages as Maven slowly goes poking through
    every repo in turn asking for artifacts, rather than letting us tell it
    which repo each artifact lives in, is even dirtier, so let's make do.
      <repository>
    <id>essentialsx-repo</id>
    <url> https://ci.ender.zone/plugin/repository/everything</url>
  </repository>
    <repository>
      <id>xephi-repo</id>
      <url>http://ci.xephi.fr/plugin/repository/everything/</url>
    </repository>
    <repository>
      <id>kitteh-repo</id>
      <url>http://repo.kitteh.org/content/groups/public</url>
    </repository>
-->
  </repositories>

<!--
     WTF even is a pluginRepository? How is it different to the repository
    entries above?

-->
	<pluginRepositories>
    	<pluginRepository>
            <id>kitteh-repo</id>
            <url>http://repo.kitteh.org/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
      <dependency>
      <groupId>org.spigotmc</groupId>
      <artifactId>spigot-api</artifactId>
      <version>1.16.1-R0.1-SNAPSHOT</version>
      <type>jar</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <!--
        should be able to build without this, we only needed it for chat
        coloring based on group membership; could instead check for a permission
        named after the group or something?
        Can't find a maven repo with EssentialsX-GroupManager.
        Or, I could even consider migrating us to a newer, more widely supported
        permissions management system.
      <dependency>
    <groupId>net.ess3</groupId>
    <artifactId>EssentialsX</artifactId>
    <version>2.17.2</version>
  </dependency>
    <dependency>
        <groupId>net.ess3</groupId>
        <artifactId>EssentialsXGroupManager</artifactId>
        <version>2.17.2</version>
    </dependency>
    -->
  </dependencies>
  
  <build>
    <resources>
         <resource>
                <targetPath>.</targetPath>
                <filtering>true</filtering>
                <directory>${basedir}</directory>
                <includes>
                    <include>plugin.yml</include>
                </includes>
		</resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
</project>




